<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
    <line>
      <![CDATA[<div style="display:block;margin-left:10px;"><div  class="teststepfail"><span class="teststepfail-label">T </span>Given Login to the online banking portal with data '${accountHolder.login}'</div><div style="display:block;margin-left:10px;"><div  class="fail"><span class="fail-label">F </span>com/google/gson/internal/LinkedTreeMap</div></div><div  class="teststep"><span class="teststep-label">T </span>When user transfer '${accountHolder.amountToBePaid}' to '${payee}'</div><div  class="teststep"><span class="teststep-label">T </span>Then Amount '${accountHolder.amountToBePaid}' is deducted from '${accountHolder.currentBalance}'</div><div  class="teststep"><span class="teststep-label">T </span>And '${payee.currentBalance}' is increased by '${accountHolder.amountToBePaid}'</div></div>]]>
    </line>
  </reporter-output>
  <suite name="BankingTransaction.scenarios.MoneyTransfer.bdd" duration-ms="374" started-at="2018-07-19T11:35:18Z" finished-at="2018-07-19T11:35:18Z">
    <groups>
      <group name="QCSL">
        <method signature="scenarios.MoneyTransfer.bdd.Money Transfer()[pri:1000, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" name="Money Transfer" class="com.qmetry.qaf.automation.step.client.Scenario"/>
      </group> <!-- QCSL -->
    </groups>
    <test name="BDD Test" duration-ms="374" started-at="2018-07-19T11:35:18Z" finished-at="2018-07-19T11:35:18Z">
      <class name="com.qmetry.qaf.automation.step.client.Scenario">
        <test-method status="PASS" signature="setupSuit(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" test-instance-name="Money Transfer" name="setupSuit" is-config="true" duration-ms="18" started-at="2018-07-19T17:05:18Z" finished-at="2018-07-19T17:05:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1f3f4916]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSuit -->
        <test-method status="PASS" signature="setupTest(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" test-instance-name="Money Transfer" name="setupTest" is-config="true" duration-ms="3" started-at="2018-07-19T17:05:18Z" finished-at="2018-07-19T17:05:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1f3f4916]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method status="PASS" signature="setup(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" test-instance-name="Money Transfer" name="setup" is-config="true" duration-ms="1" started-at="2018-07-19T17:05:18Z" finished-at="2018-07-19T17:05:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1f3f4916]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setupMethod(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" test-instance-name="Money Transfer" name="setupMethod" is-config="true" duration-ms="1" started-at="2018-07-19T17:05:18Z" finished-at="2018-07-19T17:05:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qmetry.qaf.automation.step.client.Scenario.scenario()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1f3f4916]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="FAIL" signature="Money Transfer()[pri:1000, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" test-instance-name="Money Transfer" name="Money Transfer" duration-ms="312" started-at="2018-07-19T17:05:18Z" description="Transfer money to a friend" finished-at="2018-07-19T17:05:18Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[com/google/gson/internal/LinkedTreeMap]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: com/google/gson/internal/LinkedTreeMap
	at .Given Login to the online banking portal with data '${accountHolder.login}'(scenarios/MoneyTransfer.bdd:6)
	at com.qmetry.qaf.automation.gson.GsonObjectDeserializer.read(GsonObjectDeserializer.java:66)
	at com.qmetry.qaf.automation.gson.GsonDeserializerObjectWrapper.deserialize(GsonDeserializerObjectWrapper.java:47)
	at com.qmetry.qaf.automation.gson.GsonDeserializerObjectWrapper.deserialize(GsonDeserializerObjectWrapper.java:1)
	at com.google.gson.TreeTypeAdapter.read(TreeTypeAdapter.java:59)
	at com.google.gson.Gson.fromJson(Gson.java:755)
	at com.google.gson.Gson.fromJson(Gson.java:721)
	at com.google.gson.Gson.fromJson(Gson.java:670)
	at com.google.gson.Gson.fromJson(Gson.java:642)
	at com.qmetry.qaf.automation.step.JavaStep.processArgs(JavaStep.java:266)
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:160)
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:134)
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:167)
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:219)
Caused by: java.lang.ClassNotFoundException: com.google.gson.internal.LinkedTreeMap
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at com.qmetry.qaf.automation.gson.GsonObjectDeserializer.read(GsonObjectDeserializer.java:66)
	at com.qmetry.qaf.automation.gson.GsonDeserializerObjectWrapper.deserialize(GsonDeserializerObjectWrapper.java:47)
	at com.qmetry.qaf.automation.gson.GsonDeserializerObjectWrapper.deserialize(GsonDeserializerObjectWrapper.java:1)
	at com.google.gson.TreeTypeAdapter.read(TreeTypeAdapter.java:59)
	at com.google.gson.Gson.fromJson(Gson.java:755)
	at com.google.gson.Gson.fromJson(Gson.java:721)
	at com.google.gson.Gson.fromJson(Gson.java:670)
	at com.google.gson.Gson.fromJson(Gson.java:642)
	at com.qmetry.qaf.automation.step.JavaStep.processArgs(JavaStep.java:266)
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:160)
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:134)
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:167)
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:219)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:781)
	at org.testng.TestRunner.run(TestRunner.java:635)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
            <line>
              <![CDATA[<div style="display:block;margin-left:10px;"><div  class="teststepfail"><span class="teststepfail-label">T </span>Given Login to the online banking portal with data '${accountHolder.login}'</div><div style="display:block;margin-left:10px;"><div  class="fail"><span class="fail-label">F </span>com/google/gson/internal/LinkedTreeMap</div></div><div  class="teststep"><span class="teststep-label">T </span>When user transfer '${accountHolder.amountToBePaid}' to '${payee}'</div><div  class="teststep"><span class="teststep-label">T </span>Then Amount '${accountHolder.amountToBePaid}' is deducted from '${accountHolder.currentBalance}'</div><div  class="teststep"><span class="teststep-label">T </span>And '${payee.currentBalance}' is increased by '${accountHolder.amountToBePaid}'</div></div>]]>
            </line>
          </reporter-output>
        </test-method> <!-- Money Transfer -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" test-instance-name="Money Transfer" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-19T17:05:18Z" finished-at="2018-07-19T17:05:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1f3f4916]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Money Transfer status=FAILURE method=scenarios.MoneyTransfer.bdd.Money Transfer()[pri:1000, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8] output=<div style="display:block;margin-left:10px;"><div  class="teststepfail"><span class="teststepfail-label">T </span>Given Login to the online banking portal with data '${accountHolder.login}'</div><div style="display:block;margin-left:10px;"><div  class="fail"><span class="fail-label">F </span>com/google/gson/internal/LinkedTreeMap</div></div><div  class="teststep"><span class="teststep-label">T </span>When user transfer '${accountHolder.amountToBePaid}' to '${payee}'</div><div  class="teststep"><span class="teststep-label">T </span>Then Amount '${accountHolder.amountToBePaid}' is deducted from '${accountHolder.currentBalance}'</div><div  class="teststep"><span class="teststep-label">T </span>And '${payee.currentBalance}' is increased by '${accountHolder.amountToBePaid}'</div></div>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" test-instance-name="Money Transfer" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-19T17:05:18Z" finished-at="2018-07-19T17:05:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1f3f4916]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" test-instance-name="Money Transfer" name="afterTest" is-config="true" duration-ms="3" started-at="2018-07-19T17:05:18Z" finished-at="2018-07-19T17:05:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1f3f4916]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuit(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" test-instance-name="Money Transfer" name="afterSuit" is-config="true" duration-ms="3" started-at="2018-07-19T17:05:18Z" finished-at="2018-07-19T17:05:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1f3f4916]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuit -->
      </class> <!-- com.qmetry.qaf.automation.step.client.Scenario -->
    </test> <!-- BDD Test -->
  </suite> <!-- BankingTransaction.scenarios.MoneyTransfer.bdd -->
</testng-results>
